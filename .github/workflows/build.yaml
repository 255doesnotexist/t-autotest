name: Build

permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-22.04
            rust: stable
            target: x86_64-unknown-linux-gnu
            archive-name: autotest-linux.tar.gz
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            archive-name: autotest-macos.tar.gz
          - build: windows
            os: windows-2019
            rust: stable-x86_64-msvc
            target: x86_64-pc-windows-msvc
            archive-name: autotest-windows.zip
      fail-fast: false

    steps:
      - name: dependencies
        run: |
          pip install maturin

      - name: dependencies(ubuntu)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get install libudev-dev

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build binary
        run: |
          cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Strip binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/${{ matrix.target }}/release/autotest"

      - name: Build binary
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md archive/
          cd archive
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/autotest.exe" ./
            7z a -tzip "${{ matrix.archive-name }}" LICENSE README.md autotest.exe
          else
            cp "../target/${{ matrix.target }}/release/autotest" ./
            tar -czf "${{ matrix.archive-name }}" LICENSE README.md autotest
          fi

      - name: Build python wheel
        run: |
          maturin build --features pyo3/extension-module -m ./crates/t-binding/lang/py/Cargo.toml

      - name: Upload artifact binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: |
            archive/${{ matrix.archive-name }}

      - name: Upload artifact Whl
        uses: actions/upload-artifact@v4
        with:
          name: pyautotest-${{ matrix.build }}.whl
          path: |
            ./target/wheels/pyautotest-${{ matrix.build }}.whl

      - name: Upload release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            archive/${{ matrix.archive-name }}
            ./target/wheels/*.whl
